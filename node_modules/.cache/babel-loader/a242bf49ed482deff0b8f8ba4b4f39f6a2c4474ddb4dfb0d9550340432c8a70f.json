{"ast":null,"code":"// src/authorization-errors.ts\nvar REVERIFICATION_REASON = \"reverification-error\";\nvar reverificationError = missingConfig => ({\n  clerk_error: {\n    type: \"forbidden\",\n    reason: REVERIFICATION_REASON,\n    metadata: {\n      reverification: missingConfig\n    }\n  }\n});\nvar reverificationErrorResponse = function () {\n  return new Response(JSON.stringify(reverificationError(...arguments)), {\n    status: 403\n  });\n};\nvar isReverificationHint = result => {\n  var _result$clerk_error, _result$clerk_error2;\n  return result && typeof result === \"object\" && \"clerk_error\" in result && ((_result$clerk_error = result.clerk_error) === null || _result$clerk_error === void 0 ? void 0 : _result$clerk_error.type) === \"forbidden\" && ((_result$clerk_error2 = result.clerk_error) === null || _result$clerk_error2 === void 0 ? void 0 : _result$clerk_error2.reason) === REVERIFICATION_REASON;\n};\nexport { reverificationError, reverificationErrorResponse, isReverificationHint };","map":{"version":3,"names":["REVERIFICATION_REASON","reverificationError","missingConfig","clerk_error","type","reason","metadata","reverification","reverificationErrorResponse","Response","JSON","stringify","arguments","status","isReverificationHint","result","_result$clerk_error","_result$clerk_error2"],"sources":["/Users/devenspear/CascadeProjects/HealthApps25/node_modules/@clerk/shared/src/authorization-errors.ts"],"sourcesContent":["import type { ReverificationConfig } from '@clerk/types';\n\ntype ClerkError<T> = {\n  clerk_error: T;\n};\n\nconst REVERIFICATION_REASON = 'reverification-error';\n\ntype ReverificationError<M extends { metadata?: any } = { metadata: unknown }> = ClerkError<\n  {\n    type: 'forbidden';\n    reason: typeof REVERIFICATION_REASON;\n  } & M\n>;\n\nconst reverificationError = <MC extends ReverificationConfig>(\n  missingConfig?: MC,\n): ReverificationError<{\n  metadata?: {\n    reverification?: MC;\n  };\n}> => ({\n  clerk_error: {\n    type: 'forbidden',\n    reason: REVERIFICATION_REASON,\n    metadata: {\n      reverification: missingConfig,\n    },\n  },\n});\n\nconst reverificationErrorResponse = (...args: Parameters<typeof reverificationError>) =>\n  new Response(JSON.stringify(reverificationError(...args)), {\n    status: 403,\n  });\n\nconst isReverificationHint = (result: any): result is ReturnType<typeof reverificationError> => {\n  return (\n    result &&\n    typeof result === 'object' &&\n    'clerk_error' in result &&\n    result.clerk_error?.type === 'forbidden' &&\n    result.clerk_error?.reason === REVERIFICATION_REASON\n  );\n};\n\nexport { reverificationError, reverificationErrorResponse, isReverificationHint };\n"],"mappings":";AAMA,IAAMA,qBAAA,GAAwB;AAS9B,IAAMC,mBAAA,GACJC,aAAA,KAKK;EACLC,WAAA,EAAa;IACXC,IAAA,EAAM;IACNC,MAAA,EAAQL,qBAAA;IACRM,QAAA,EAAU;MACRC,cAAA,EAAgBL;IAClB;EACF;AACF;AAEA,IAAMM,2BAAA,GAA8B,SAAAA,CAAA;EAAA,OAClC,IAAIC,QAAA,CAASC,IAAA,CAAKC,SAAA,CAAUV,mBAAA,CAAoB,GAAAW,SAAO,CAAC,GAAG;IACzDC,MAAA,EAAQ;EACV,CAAC;AAAA;AAEH,IAAMC,oBAAA,GAAwBC,MAAA,IAAkE;EAAA,IAAAC,mBAAA,EAAAC,oBAAA;EAC9F,OACEF,MAAA,IACA,OAAOA,MAAA,KAAW,YAClB,iBAAiBA,MAAA,IACjB,EAAAC,mBAAA,GAAAD,MAAA,CAAOZ,WAAA,cAAAa,mBAAA,uBAAPA,mBAAA,CAAoBZ,IAAA,MAAS,eAC7B,EAAAa,oBAAA,GAAAF,MAAA,CAAOZ,WAAA,cAAAc,oBAAA,uBAAPA,oBAAA,CAAoBZ,MAAA,MAAWL,qBAAA;AAEnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}