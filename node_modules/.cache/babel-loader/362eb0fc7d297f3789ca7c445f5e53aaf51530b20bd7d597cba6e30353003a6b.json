{"ast":null,"code":"var _jsxFileName = \"/Users/devenspear/CascadeProjects/HealthApps25/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport Layout from './components/Layout';\nimport Dashboard from './components/Dashboard';\nimport CleanseCalendar from './components/CleanseCalendar';\nimport SupplementStack from './components/SupplementStack';\nimport BiofeedbackTracker from './components/BiofeedbackTracker';\nimport CleanseJournal from './components/CleanseJournal';\nimport PostCleanseIntegration from './components/PostCleanseIntegration';\nimport { cleanseCalendar } from './data/cleanseCalendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialProgress = {\n  currentDay: 1,\n  startDate: new Date().toISOString().split('T')[0],\n  completedDays: [],\n  journalEntries: {},\n  biofeedbackEntries: {},\n  dayEntries: cleanseCalendar.reduce((acc, day) => {\n    acc[day.day] = day;\n    return acc;\n  }, {})\n};\nfunction App() {\n  _s();\n  const [progress, setProgress] = useLocalStorage('cleanse-progress', initialProgress);\n  const updateProgress = newProgress => {\n    setProgress(prev => ({\n      ...prev,\n      ...newProgress\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App min-h-screen bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              progress: progress,\n              updateProgress: updateProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/calendar\",\n            element: /*#__PURE__*/_jsxDEV(CleanseCalendar, {\n              progress: progress,\n              updateProgress: updateProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/supplements\",\n            element: /*#__PURE__*/_jsxDEV(SupplementStack, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/biofeedback\",\n            element: /*#__PURE__*/_jsxDEV(BiofeedbackTracker, {\n              progress: progress,\n              updateProgress: updateProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/journal\",\n            element: /*#__PURE__*/_jsxDEV(CleanseJournal, {\n              progress: progress,\n              updateProgress: updateProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/post-cleanse\",\n            element: /*#__PURE__*/_jsxDEV(PostCleanseIntegration, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7JcGQ252bHK/omtCdQmRkPmp864=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","useLocalStorage","Layout","Dashboard","CleanseCalendar","SupplementStack","BiofeedbackTracker","CleanseJournal","PostCleanseIntegration","cleanseCalendar","jsxDEV","_jsxDEV","initialProgress","currentDay","startDate","Date","toISOString","split","completedDays","journalEntries","biofeedbackEntries","dayEntries","reduce","acc","day","App","_s","progress","setProgress","updateProgress","newProgress","prev","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/devenspear/CascadeProjects/HealthApps25/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider } from './lib/auth';\nimport AuthGuard from './components/AuthGuard';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { UserProgress } from './types';\nimport Layout from './components/Layout';\nimport Dashboard from './components/Dashboard';\nimport CleanseCalendar from './components/CleanseCalendar';\nimport SupplementStack from './components/SupplementStack';\nimport BiofeedbackTracker from './components/BiofeedbackTracker';\nimport CleanseJournal from './components/CleanseJournal';\nimport PostCleanseIntegration from './components/PostCleanseIntegration';\nimport { cleanseCalendar } from './data/cleanseCalendar';\n\nconst initialProgress: UserProgress = {\n  currentDay: 1,\n  startDate: new Date().toISOString().split('T')[0],\n  completedDays: [],\n  journalEntries: {},\n  biofeedbackEntries: {},\n  dayEntries: cleanseCalendar.reduce((acc, day) => {\n    acc[day.day] = day;\n    return acc;\n  }, {} as { [day: number]: any })\n};\n\nfunction App() {\n  const [progress, setProgress] = useLocalStorage<UserProgress>('cleanse-progress', initialProgress);\n\n  const updateProgress = (newProgress: Partial<UserProgress>) => {\n    setProgress(prev => ({ ...prev, ...newProgress }));\n  };\n\n  return (\n    <Router>\n      <div className=\"App min-h-screen bg-gray-50\">\n        <Layout>\n          <Routes>\n            <Route \n              path=\"/\" \n              element={<Dashboard progress={progress} updateProgress={updateProgress} />} \n            />\n            <Route \n              path=\"/calendar\" \n              element={<CleanseCalendar progress={progress} updateProgress={updateProgress} />} \n            />\n            <Route \n              path=\"/supplements\" \n              element={<SupplementStack />} \n            />\n            <Route \n              path=\"/biofeedback\" \n              element={<BiofeedbackTracker progress={progress} updateProgress={updateProgress} />} \n            />\n            <Route \n              path=\"/journal\" \n              element={<CleanseJournal progress={progress} updateProgress={updateProgress} />} \n            />\n            <Route \n              path=\"/post-cleanse\" \n              element={<PostCleanseIntegration />} \n            />\n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n          </Routes>\n        </Layout>\n      </div>\n    </Router>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}