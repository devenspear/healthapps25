{"ast":null,"code":"import _objectSpread from\"/Users/devenspear/CascadeProjects/Paratox1.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import{AuthProvider,useAppAuth}from'./lib/auth';import AuthGuard from'./components/AuthGuard';import{useLocalStorage}from'./hooks/useLocalStorage';import Layout from'./components/Layout';import Dashboard from'./components/Dashboard';import CleanseCalendar from'./components/CleanseCalendar';import SupplementStack from'./components/SupplementStack';import BiofeedbackTracker from'./components/BiofeedbackTracker';import CleanseJournal from'./components/CleanseJournal';import PostCleanseIntegration from'./components/PostCleanseIntegration';import{cleanseCalendar}from'./data/cleanseCalendar';import{fetchProgress,saveProgress}from'./lib/api';import StartPage from'./components/StartPage';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const initialProgress={currentDay:1,startDate:new Date().toISOString().split('T')[0],completedDays:[],journalEntries:{},biofeedbackEntries:{},dayEntries:cleanseCalendar.reduce((acc,day)=>{acc[day.day]=day;return acc;},{})};function AppContent(){const{userId,isSignedIn}=useAppAuth();const[progress,setProgress]=useLocalStorage('cleanse-progress',initialProgress);// Hydrate from server once we have a userId\nReact.useEffect(()=>{async function loadRemote(){if(!userId)return;try{const remote=await fetchProgress(userId);if(remote){setProgress(remote);}}catch(err){console.error('Failed to fetch remote progress',err);}}loadRemote();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[userId]);const updateProgress=React.useCallback(newProgress=>{setProgress(prev=>{const updated=_objectSpread(_objectSpread({},prev),newProgress);// Fire and forget remote save\nif(userId){saveProgress(userId,updated).catch(err=>console.error('saveProgress failed',err));}return updated;});},[setProgress,userId]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App min-h-screen\",children:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Routes,{children:!isSignedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{path:\"/start\",element:/*#__PURE__*/_jsx(StartPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(StartPage,{})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Dashboard,{progress:progress,updateProgress:updateProgress})}),/*#__PURE__*/_jsx(Route,{path:\"/calendar\",element:/*#__PURE__*/_jsx(CleanseCalendar,{progress:progress,updateProgress:updateProgress})}),/*#__PURE__*/_jsx(Route,{path:\"/supplements\",element:/*#__PURE__*/_jsx(SupplementStack,{})}),/*#__PURE__*/_jsx(Route,{path:\"/biofeedback\",element:/*#__PURE__*/_jsx(BiofeedbackTracker,{progress:progress,updateProgress:updateProgress})}),/*#__PURE__*/_jsx(Route,{path:\"/journal\",element:/*#__PURE__*/_jsx(CleanseJournal,{progress:progress,updateProgress:updateProgress})}),/*#__PURE__*/_jsx(Route,{path:\"/post-cleanse\",element:/*#__PURE__*/_jsx(PostCleanseIntegration,{})}),/*#__PURE__*/_jsx(Route,{path:\"/start\",element:/*#__PURE__*/_jsx(StartPage,{})})]})})})})});}function App(){return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(AuthGuard,{children:/*#__PURE__*/_jsx(AppContent,{})})});}export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","AuthProvider","useAppAuth","AuthGuard","useLocalStorage","Layout","Dashboard","CleanseCalendar","SupplementStack","BiofeedbackTracker","CleanseJournal","PostCleanseIntegration","cleanseCalendar","fetchProgress","saveProgress","StartPage","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","initialProgress","currentDay","startDate","Date","toISOString","split","completedDays","journalEntries","biofeedbackEntries","dayEntries","reduce","acc","day","AppContent","userId","isSignedIn","progress","setProgress","useEffect","loadRemote","remote","err","console","error","updateProgress","useCallback","newProgress","prev","updated","_objectSpread","catch","children","className","path","element","App"],"sources":["/Users/devenspear/CascadeProjects/Paratox1.0/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { AuthProvider, useAppAuth } from './lib/auth';\nimport AuthGuard from './components/AuthGuard';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { UserProgress } from './types';\nimport Layout from './components/Layout';\nimport Dashboard from './components/Dashboard';\nimport CleanseCalendar from './components/CleanseCalendar';\nimport SupplementStack from './components/SupplementStack';\nimport BiofeedbackTracker from './components/BiofeedbackTracker';\nimport CleanseJournal from './components/CleanseJournal';\nimport PostCleanseIntegration from './components/PostCleanseIntegration';\nimport { cleanseCalendar } from './data/cleanseCalendar';\nimport { fetchProgress, saveProgress } from './lib/api';\nimport StartPage from './components/StartPage';\n\nconst initialProgress: UserProgress = {\n  currentDay: 1,\n  startDate: new Date().toISOString().split('T')[0],\n  completedDays: [],\n  journalEntries: {},\n  biofeedbackEntries: {},\n  dayEntries: cleanseCalendar.reduce((acc, day) => {\n    acc[day.day] = day;\n    return acc;\n  }, {} as { [day: number]: any })\n};\n\nfunction AppContent() {\n  const { userId, isSignedIn } = useAppAuth();\n  const [progress, setProgress] = useLocalStorage<UserProgress>('cleanse-progress', initialProgress);\n\n  // Hydrate from server once we have a userId\n  React.useEffect(() => {\n    async function loadRemote() {\n      if (!userId) return;\n      try {\n        const remote = await fetchProgress(userId);\n        if (remote) {\n          setProgress(remote);\n        }\n      } catch (err) {\n        console.error('Failed to fetch remote progress', err);\n      }\n    }\n    loadRemote();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userId]);\n\n  const updateProgress = React.useCallback((newProgress: Partial<UserProgress>) => {\n    setProgress(prev => {\n      const updated = { ...prev, ...newProgress } as UserProgress;\n      // Fire and forget remote save\n      if (userId) {\n        saveProgress(userId, updated).catch(err => console.error('saveProgress failed', err));\n      }\n      return updated;\n    });\n  }, [setProgress, userId]);\n\n  return (\n    <Router>\n      <div className=\"App min-h-screen\">\n        <Layout>\n          <Routes>\n            {!isSignedIn ? (\n              <>\n                <Route path=\"/start\" element={<StartPage />} />\n                <Route path=\"*\" element={<StartPage />} />\n              </>\n            ) : (\n              <>\n                <Route \n                  path=\"/\" \n                  element={<Dashboard progress={progress} updateProgress={updateProgress} />} \n                />\n                <Route \n                  path=\"/calendar\" \n                  element={<CleanseCalendar progress={progress} updateProgress={updateProgress} />} \n                />\n                <Route \n                  path=\"/supplements\" \n                  element={<SupplementStack />} \n                />\n                <Route \n                  path=\"/biofeedback\" \n                  element={<BiofeedbackTracker progress={progress} updateProgress={updateProgress} />} \n                />\n                <Route \n                  path=\"/journal\" \n                  element={<CleanseJournal progress={progress} updateProgress={updateProgress} />} \n                />\n                <Route \n                  path=\"/post-cleanse\" \n                  element={<PostCleanseIntegration />} \n                />\n                <Route path=\"/start\" element={<StartPage />} />\n              </>\n            )}\n          </Routes>\n        </Layout>\n      </div>\n    </Router>\n  );\n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <AuthGuard>\n        <AppContent />\n      </AuthGuard>\n    </AuthProvider>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}