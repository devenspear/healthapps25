{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{ClerkProvider,useAuth,useUser}from'@clerk/clerk-react';import{createUser,initializeDatabase}from'./database';import{jsx as _jsx}from\"react/jsx-runtime\";const publishableKey=process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;if(!publishableKey){throw new Error('Missing REACT_APP_CLERK_PUBLISHABLE_KEY environment variable');}// Custom auth context for our app\nconst AuthContext=/*#__PURE__*/createContext(null);export function AuthProvider(_ref){let{children}=_ref;return/*#__PURE__*/_jsx(ClerkProvider,{publishableKey:publishableKey,children:/*#__PURE__*/_jsx(AuthWrapper,{children:children})});}function AuthWrapper(_ref2){let{children}=_ref2;const{isLoaded,isSignedIn,userId,signOut}=useAuth();const{user}=useUser();const[dbInitialized,setDbInitialized]=useState(false);// Initialize database and create user when signed in\nuseEffect(()=>{async function setupUser(){if(isLoaded&&isSignedIn&&userId&&user&&!dbInitialized){try{var _user$primaryEmailAdd;// Initialize database tables\nawait initializeDatabase();// Create or update user in our database\nawait createUser(userId,(_user$primaryEmailAdd=user.primaryEmailAddress)===null||_user$primaryEmailAdd===void 0?void 0:_user$primaryEmailAdd.emailAddress,user.firstName||undefined,user.lastName||undefined);setDbInitialized(true);console.log('User setup completed');}catch(error){console.error('Error setting up user:',error);}}}setupUser();},[isLoaded,isSignedIn,userId,user,dbInitialized]);const authValue={isLoaded,isSignedIn:isSignedIn||false,userId,user,signOut};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:authValue,children:children});}export function useAppAuth(){const context=useContext(AuthContext);if(!context){throw new Error('useAppAuth must be used within an AuthProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","ClerkProvider","useAuth","useUser","createUser","initializeDatabase","jsx","_jsx","publishableKey","process","env","REACT_APP_CLERK_PUBLISHABLE_KEY","Error","AuthContext","AuthProvider","_ref","children","AuthWrapper","_ref2","isLoaded","isSignedIn","userId","signOut","user","dbInitialized","setDbInitialized","setupUser","_user$primaryEmailAdd","primaryEmailAddress","emailAddress","firstName","undefined","lastName","console","log","error","authValue","Provider","value","useAppAuth","context"],"sources":["/Users/devenspear/CascadeProjects/HealthApps25/src/lib/auth.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { ClerkProvider, useAuth, useUser } from '@clerk/clerk-react';\nimport { createUser, initializeDatabase } from './database';\n\nconst publishableKey = process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;\n\nif (!publishableKey) {\n  throw new Error('Missing REACT_APP_CLERK_PUBLISHABLE_KEY environment variable');\n}\n\n// Custom auth context for our app\ninterface AuthContextType {\n  isLoaded: boolean;\n  isSignedIn: boolean;\n  userId: string | null | undefined;\n  user: any;\n  signOut: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  return (\n    <ClerkProvider publishableKey={publishableKey!}>\n      <AuthWrapper>{children}</AuthWrapper>\n    </ClerkProvider>\n  );\n}\n\nfunction AuthWrapper({ children }: { children: React.ReactNode }) {\n  const { isLoaded, isSignedIn, userId, signOut } = useAuth();\n  const { user } = useUser();\n  const [dbInitialized, setDbInitialized] = useState(false);\n\n  // Initialize database and create user when signed in\n  useEffect(() => {\n    async function setupUser() {\n      if (isLoaded && isSignedIn && userId && user && !dbInitialized) {\n        try {\n          // Initialize database tables\n          await initializeDatabase();\n          \n          // Create or update user in our database\n          await createUser(\n            userId,\n            user.primaryEmailAddress?.emailAddress,\n            user.firstName || undefined,\n            user.lastName || undefined\n          );\n          \n          setDbInitialized(true);\n          console.log('User setup completed');\n        } catch (error) {\n          console.error('Error setting up user:', error);\n        }\n      }\n    }\n\n    setupUser();\n  }, [isLoaded, isSignedIn, userId, user, dbInitialized]);\n\n  const authValue: AuthContextType = {\n    isLoaded,\n    isSignedIn: isSignedIn || false,\n    userId,\n    user,\n    signOut\n  };\n\n  return (\n    <AuthContext.Provider value={authValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAppAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAppAuth must be used within an AuthProvider');\n  }\n  return context;\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,OAASC,aAAa,CAAEC,OAAO,CAAEC,OAAO,KAAQ,oBAAoB,CACpE,OAASC,UAAU,CAAEC,kBAAkB,KAAQ,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5D,KAAM,CAAAC,cAAc,CAAGC,OAAO,CAACC,GAAG,CAACC,+BAA+B,CAElE,GAAI,CAACH,cAAc,CAAE,CACnB,KAAM,IAAI,CAAAI,KAAK,CAAC,8DAA8D,CAAC,CACjF,CAEA;AASA,KAAM,CAAAC,WAAW,cAAGhB,aAAa,CAAyB,IAAI,CAAC,CAE/D,MAAO,SAAS,CAAAiB,YAAYA,CAAAC,IAAA,CAA8C,IAA7C,CAAEC,QAAwC,CAAC,CAAAD,IAAA,CACtE,mBACER,IAAA,CAACN,aAAa,EAACO,cAAc,CAAEA,cAAgB,CAAAQ,QAAA,cAC7CT,IAAA,CAACU,WAAW,EAAAD,QAAA,CAAEA,QAAQ,CAAc,CAAC,CACxB,CAAC,CAEpB,CAEA,QAAS,CAAAC,WAAWA,CAAAC,KAAA,CAA8C,IAA7C,CAAEF,QAAwC,CAAC,CAAAE,KAAA,CAC9D,KAAM,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,MAAM,CAAEC,OAAQ,CAAC,CAAGpB,OAAO,CAAC,CAAC,CAC3D,KAAM,CAAEqB,IAAK,CAAC,CAAGpB,OAAO,CAAC,CAAC,CAC1B,KAAM,CAACqB,aAAa,CAAEC,gBAAgB,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CAEzD;AACAD,SAAS,CAAC,IAAM,CACd,cAAe,CAAA2B,SAASA,CAAA,CAAG,CACzB,GAAIP,QAAQ,EAAIC,UAAU,EAAIC,MAAM,EAAIE,IAAI,EAAI,CAACC,aAAa,CAAE,CAC9D,GAAI,KAAAG,qBAAA,CACF;AACA,KAAM,CAAAtB,kBAAkB,CAAC,CAAC,CAE1B;AACA,KAAM,CAAAD,UAAU,CACdiB,MAAM,EAAAM,qBAAA,CACNJ,IAAI,CAACK,mBAAmB,UAAAD,qBAAA,iBAAxBA,qBAAA,CAA0BE,YAAY,CACtCN,IAAI,CAACO,SAAS,EAAIC,SAAS,CAC3BR,IAAI,CAACS,QAAQ,EAAID,SACnB,CAAC,CAEDN,gBAAgB,CAAC,IAAI,CAAC,CACtBQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACrC,CAAE,MAAOC,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CACF,CAEAT,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACP,QAAQ,CAAEC,UAAU,CAAEC,MAAM,CAAEE,IAAI,CAAEC,aAAa,CAAC,CAAC,CAEvD,KAAM,CAAAY,SAA0B,CAAG,CACjCjB,QAAQ,CACRC,UAAU,CAAEA,UAAU,EAAI,KAAK,CAC/BC,MAAM,CACNE,IAAI,CACJD,OACF,CAAC,CAED,mBACEf,IAAA,CAACM,WAAW,CAACwB,QAAQ,EAACC,KAAK,CAAEF,SAAU,CAAApB,QAAA,CACpCA,QAAQ,CACW,CAAC,CAE3B,CAEA,MAAO,SAAS,CAAAuB,UAAUA,CAAA,CAAG,CAC3B,KAAM,CAAAC,OAAO,CAAG1C,UAAU,CAACe,WAAW,CAAC,CACvC,GAAI,CAAC2B,OAAO,CAAE,CACZ,KAAM,IAAI,CAAA5B,KAAK,CAAC,gDAAgD,CAAC,CACnE,CACA,MAAO,CAAA4B,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}