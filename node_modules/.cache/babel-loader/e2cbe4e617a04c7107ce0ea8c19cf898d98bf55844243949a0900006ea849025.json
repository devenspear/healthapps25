{"ast":null,"code":"var _jsxFileName = \"/Users/devenspear/CascadeProjects/HealthApps25/src/lib/auth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { ClerkProvider, useAuth, useUser } from '@clerk/clerk-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst publishableKey = process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;\n\n// Development mode detection - only works on localhost\nconst isDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n\n// Development mode mock auth provider\nfunction DevAuthProvider({\n  children\n}) {\n  _s();\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const mockAuth = {\n    isLoaded: true,\n    isSignedIn,\n    userId: isSignedIn ? 'dev-user-123' : null,\n    user: isSignedIn ? {\n      firstName: 'Dev',\n      lastName: 'User',\n      primaryEmailAddress: {\n        emailAddress: 'dev@localhost.com'\n      }\n    } : null,\n    signOut: () => {\n      setIsSignedIn(false);\n      setUser(null);\n      console.log('Mock signOut');\n    }\n  };\n\n  // Expose signIn function globally for StartPage to use\n  React.useEffect(() => {\n    window.mockSignIn = () => {\n      setIsSignedIn(true);\n      setUser({\n        firstName: 'Dev',\n        lastName: 'User',\n        primaryEmailAddress: {\n          emailAddress: 'dev@localhost.com'\n        }\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: mockAuth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(DevAuthProvider, \"IPQT8zay/GPD+lRBQJe8CX7GkIM=\");\n_c = DevAuthProvider;\nif (!publishableKey && !isDevelopment) {\n  throw new Error('Missing REACT_APP_CLERK_PUBLISHABLE_KEY environment variable');\n}\n\n// Custom auth context for our app\n\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  // Use mock auth in development mode\n  if (isDevelopment) {\n    return /*#__PURE__*/_jsxDEV(DevAuthProvider, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Use real Clerk in production\n  return /*#__PURE__*/_jsxDEV(ClerkProvider, {\n    publishableKey: publishableKey,\n    children: /*#__PURE__*/_jsxDEV(AuthWrapper, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AuthProvider;\nfunction AuthWrapper({\n  children\n}) {\n  _s2();\n  const {\n    isLoaded,\n    isSignedIn,\n    userId,\n    signOut\n  } = useAuth();\n  const {\n    user\n  } = useUser();\n  const [setupDone, setSetupDone] = useState(false);\n\n  // Initialize database and create user when signed in\n  useEffect(() => {\n    async function setupUser() {\n      if (isLoaded && isSignedIn && userId && user && !setupDone) {\n        try {\n          var _user$primaryEmailAdd;\n          await fetch('/api/setup-user', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              userId,\n              email: (_user$primaryEmailAdd = user.primaryEmailAddress) === null || _user$primaryEmailAdd === void 0 ? void 0 : _user$primaryEmailAdd.emailAddress,\n              firstName: user.firstName,\n              lastName: user.lastName\n            })\n          });\n          setSetupDone(true);\n          console.log('User setup completed');\n        } catch (error) {\n          console.error('Error setting up user:', error);\n        }\n      }\n    }\n    setupUser();\n  }, [isLoaded, isSignedIn, userId, user, setupDone]);\n  const authValue = {\n    isLoaded,\n    isSignedIn: isSignedIn || false,\n    userId,\n    user,\n    signOut\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthWrapper, \"qceNKBMX8X1PsJdACKjxdLkGxpU=\", false, function () {\n  return [useAuth, useUser];\n});\n_c3 = AuthWrapper;\nexport function useAppAuth() {\n  _s3();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAppAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s3(useAppAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DevAuthProvider\");\n$RefreshReg$(_c2, \"AuthProvider\");\n$RefreshReg$(_c3, \"AuthWrapper\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","ClerkProvider","useAuth","useUser","jsxDEV","_jsxDEV","publishableKey","process","env","REACT_APP_CLERK_PUBLISHABLE_KEY","isDevelopment","window","location","hostname","DevAuthProvider","children","_s","isSignedIn","setIsSignedIn","user","setUser","mockAuth","isLoaded","userId","firstName","lastName","primaryEmailAddress","emailAddress","signOut","console","log","mockSignIn","AuthContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Error","AuthProvider","AuthWrapper","_c2","_s2","setupDone","setSetupDone","setupUser","_user$primaryEmailAdd","fetch","method","headers","body","JSON","stringify","email","error","authValue","_c3","useAppAuth","_s3","context","$RefreshReg$"],"sources":["/Users/devenspear/CascadeProjects/HealthApps25/src/lib/auth.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { ClerkProvider, useAuth, useUser } from '@clerk/clerk-react';\n\nconst publishableKey = process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;\n\n// Development mode detection - only works on localhost\nconst isDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n\n// Development mode mock auth provider\nfunction DevAuthProvider({ children }: { children: React.ReactNode }) {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState<any>(null);\n  \n  const mockAuth = {\n    isLoaded: true,\n    isSignedIn,\n    userId: isSignedIn ? 'dev-user-123' : null,\n    user: isSignedIn ? {\n      firstName: 'Dev',\n      lastName: 'User',\n      primaryEmailAddress: { emailAddress: 'dev@localhost.com' }\n    } : null,\n    signOut: () => {\n      setIsSignedIn(false);\n      setUser(null);\n      console.log('Mock signOut');\n    }\n  };\n\n  // Expose signIn function globally for StartPage to use\n  React.useEffect(() => {\n    (window as any).mockSignIn = () => {\n      setIsSignedIn(true);\n      setUser({\n        firstName: 'Dev',\n        lastName: 'User',\n        primaryEmailAddress: { emailAddress: 'dev@localhost.com' }\n      });\n    };\n  }, []);\n\n  return (\n    <AuthContext.Provider value={mockAuth}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nif (!publishableKey && !isDevelopment) {\n  throw new Error('Missing REACT_APP_CLERK_PUBLISHABLE_KEY environment variable');\n}\n\n// Custom auth context for our app\ninterface AuthContextType {\n  isLoaded: boolean;\n  isSignedIn: boolean;\n  userId: string | null | undefined;\n  user: any;\n  signOut: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  // Use mock auth in development mode\n  if (isDevelopment) {\n    return <DevAuthProvider>{children}</DevAuthProvider>;\n  }\n\n  // Use real Clerk in production\n  return (\n    <ClerkProvider publishableKey={publishableKey!}>\n      <AuthWrapper>{children}</AuthWrapper>\n    </ClerkProvider>\n  );\n}\n\nfunction AuthWrapper({ children }: { children: React.ReactNode }) {\n  const { isLoaded, isSignedIn, userId, signOut } = useAuth();\n  const { user } = useUser();\n  const [setupDone, setSetupDone] = useState(false);\n\n  // Initialize database and create user when signed in\n  useEffect(() => {\n    async function setupUser() {\n      if (isLoaded && isSignedIn && userId && user && !setupDone) {\n        try {\n          await fetch('/api/setup-user', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              userId,\n              email: user.primaryEmailAddress?.emailAddress,\n              firstName: user.firstName,\n              lastName: user.lastName,\n            }),\n          });\n\n          setSetupDone(true);\n          console.log('User setup completed');\n        } catch (error) {\n          console.error('Error setting up user:', error);\n        }\n      }\n    }\n\n    setupUser();\n  }, [isLoaded, isSignedIn, userId, user, setupDone]);\n\n  const authValue: AuthContextType = {\n    isLoaded,\n    isSignedIn: isSignedIn || false,\n    userId,\n    user,\n    signOut\n  };\n\n  return (\n    <AuthContext.Provider value={authValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAppAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAppAuth must be used within an AuthProvider');\n  }\n  return context;\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}