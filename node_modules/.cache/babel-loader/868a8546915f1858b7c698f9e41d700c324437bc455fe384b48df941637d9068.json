{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{ClerkProvider,useAuth,useUser}from'@clerk/clerk-react';import{jsx as _jsx}from\"react/jsx-runtime\";const publishableKey=process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;// Development mode detection - only works on localhost\nconst isDevelopment=window.location.hostname==='localhost'||window.location.hostname==='127.0.0.1';// Development mode mock auth provider\nfunction DevAuthProvider(_ref){let{children}=_ref;const[isSignedIn,setIsSignedIn]=useState(false);const[,setUser]=useState(null);const mockAuth={isLoaded:true,isSignedIn,userId:isSignedIn?'dev-user-123':null,user:isSignedIn?{firstName:'Dev',lastName:'User',primaryEmailAddress:{emailAddress:'dev@localhost.com'}}:null,signOut:()=>{setIsSignedIn(false);setUser(null);console.log('Mock signOut');}};// Expose signIn function globally for StartPage to use\nReact.useEffect(()=>{window.mockSignIn=()=>{setIsSignedIn(true);setUser({firstName:'Dev',lastName:'User',primaryEmailAddress:{emailAddress:'dev@localhost.com'}});};},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:mockAuth,children:children});}if(!publishableKey&&!isDevelopment){throw new Error('Missing REACT_APP_CLERK_PUBLISHABLE_KEY environment variable');}// Custom auth context for our app\nconst AuthContext=/*#__PURE__*/createContext(null);export function AuthProvider(_ref2){let{children}=_ref2;// Use mock auth in development mode\nif(isDevelopment){return/*#__PURE__*/_jsx(DevAuthProvider,{children:children});}// Use real Clerk in production\nreturn/*#__PURE__*/_jsx(ClerkProvider,{publishableKey:publishableKey,children:/*#__PURE__*/_jsx(AuthWrapper,{children:children})});}function AuthWrapper(_ref3){let{children}=_ref3;const{isLoaded,isSignedIn,userId,signOut}=useAuth();const{user}=useUser();const[setupDone,setSetupDone]=useState(false);// Initialize database and create user when signed in\nuseEffect(()=>{async function setupUser(){if(isLoaded&&isSignedIn&&userId&&user&&!setupDone){try{var _user$primaryEmailAdd;await fetch('/api/setup-user',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId,email:(_user$primaryEmailAdd=user.primaryEmailAddress)===null||_user$primaryEmailAdd===void 0?void 0:_user$primaryEmailAdd.emailAddress,firstName:user.firstName,lastName:user.lastName})});setSetupDone(true);console.log('User setup completed');}catch(error){console.error('Error setting up user:',error);}}}setupUser();},[isLoaded,isSignedIn,userId,user,setupDone]);const authValue={isLoaded,isSignedIn:isSignedIn||false,userId,user,signOut};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:authValue,children:children});}export function useAppAuth(){const context=useContext(AuthContext);if(!context){throw new Error('useAppAuth must be used within an AuthProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","ClerkProvider","useAuth","useUser","jsx","_jsx","publishableKey","process","env","REACT_APP_CLERK_PUBLISHABLE_KEY","isDevelopment","window","location","hostname","DevAuthProvider","_ref","children","isSignedIn","setIsSignedIn","setUser","mockAuth","isLoaded","userId","user","firstName","lastName","primaryEmailAddress","emailAddress","signOut","console","log","mockSignIn","AuthContext","Provider","value","Error","AuthProvider","_ref2","AuthWrapper","_ref3","setupDone","setSetupDone","setupUser","_user$primaryEmailAdd","fetch","method","headers","body","JSON","stringify","email","error","authValue","useAppAuth","context"],"sources":["/Users/devenspear/CascadeProjects/Paratox1.0/src/lib/auth.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { ClerkProvider, useAuth, useUser } from '@clerk/clerk-react';\n\nconst publishableKey = process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;\n\n// Development mode detection - only works on localhost\nconst isDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n\n// Development mode mock auth provider\nfunction DevAuthProvider({ children }: { children: React.ReactNode }) {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [, setUser] = useState<any>(null);\n  \n  const mockAuth = {\n    isLoaded: true,\n    isSignedIn,\n    userId: isSignedIn ? 'dev-user-123' : null,\n    user: isSignedIn ? {\n      firstName: 'Dev',\n      lastName: 'User',\n      primaryEmailAddress: { emailAddress: 'dev@localhost.com' }\n    } : null,\n    signOut: () => {\n      setIsSignedIn(false);\n      setUser(null);\n      console.log('Mock signOut');\n    }\n  };\n\n  // Expose signIn function globally for StartPage to use\n  React.useEffect(() => {\n    (window as any).mockSignIn = () => {\n      setIsSignedIn(true);\n      setUser({\n        firstName: 'Dev',\n        lastName: 'User',\n        primaryEmailAddress: { emailAddress: 'dev@localhost.com' }\n      });\n    };\n  }, []);\n\n  return (\n    <AuthContext.Provider value={mockAuth}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nif (!publishableKey && !isDevelopment) {\n  throw new Error('Missing REACT_APP_CLERK_PUBLISHABLE_KEY environment variable');\n}\n\n// Custom auth context for our app\ninterface AuthContextType {\n  isLoaded: boolean;\n  isSignedIn: boolean;\n  userId: string | null | undefined;\n  user: any;\n  signOut: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  // Use mock auth in development mode\n  if (isDevelopment) {\n    return <DevAuthProvider>{children}</DevAuthProvider>;\n  }\n\n  // Use real Clerk in production\n  return (\n    <ClerkProvider publishableKey={publishableKey!}>\n      <AuthWrapper>{children}</AuthWrapper>\n    </ClerkProvider>\n  );\n}\n\nfunction AuthWrapper({ children }: { children: React.ReactNode }) {\n  const { isLoaded, isSignedIn, userId, signOut } = useAuth();\n  const { user } = useUser();\n  const [setupDone, setSetupDone] = useState(false);\n\n  // Initialize database and create user when signed in\n  useEffect(() => {\n    async function setupUser() {\n      if (isLoaded && isSignedIn && userId && user && !setupDone) {\n        try {\n          await fetch('/api/setup-user', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              userId,\n              email: user.primaryEmailAddress?.emailAddress,\n              firstName: user.firstName,\n              lastName: user.lastName,\n            }),\n          });\n\n          setSetupDone(true);\n          console.log('User setup completed');\n        } catch (error) {\n          console.error('Error setting up user:', error);\n        }\n      }\n    }\n\n    setupUser();\n  }, [isLoaded, isSignedIn, userId, user, setupDone]);\n\n  const authValue: AuthContextType = {\n    isLoaded,\n    isSignedIn: isSignedIn || false,\n    userId,\n    user,\n    signOut\n  };\n\n  return (\n    <AuthContext.Provider value={authValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAppAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAppAuth must be used within an AuthProvider');\n  }\n  return context;\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,OAASC,aAAa,CAAEC,OAAO,CAAEC,OAAO,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErE,KAAM,CAAAC,cAAc,CAAGC,OAAO,CAACC,GAAG,CAACC,+BAA+B,CAElE;AACA,KAAM,CAAAC,aAAa,CAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,CAE1G;AACA,QAAS,CAAAC,eAAeA,CAAAC,IAAA,CAA8C,IAA7C,CAAEC,QAAwC,CAAC,CAAAD,IAAA,CAClE,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,EAAGmB,OAAO,CAAC,CAAGnB,QAAQ,CAAM,IAAI,CAAC,CAEvC,KAAM,CAAAoB,QAAQ,CAAG,CACfC,QAAQ,CAAE,IAAI,CACdJ,UAAU,CACVK,MAAM,CAAEL,UAAU,CAAG,cAAc,CAAG,IAAI,CAC1CM,IAAI,CAAEN,UAAU,CAAG,CACjBO,SAAS,CAAE,KAAK,CAChBC,QAAQ,CAAE,MAAM,CAChBC,mBAAmB,CAAE,CAAEC,YAAY,CAAE,mBAAoB,CAC3D,CAAC,CAAG,IAAI,CACRC,OAAO,CAAEA,CAAA,GAAM,CACbV,aAAa,CAAC,KAAK,CAAC,CACpBC,OAAO,CAAC,IAAI,CAAC,CACbU,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC7B,CACF,CAAC,CAED;AACAlC,KAAK,CAACG,SAAS,CAAC,IAAM,CACnBY,MAAM,CAASoB,UAAU,CAAG,IAAM,CACjCb,aAAa,CAAC,IAAI,CAAC,CACnBC,OAAO,CAAC,CACNK,SAAS,CAAE,KAAK,CAChBC,QAAQ,CAAE,MAAM,CAChBC,mBAAmB,CAAE,CAAEC,YAAY,CAAE,mBAAoB,CAC3D,CAAC,CAAC,CACJ,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEtB,IAAA,CAAC2B,WAAW,CAACC,QAAQ,EAACC,KAAK,CAAEd,QAAS,CAAAJ,QAAA,CACnCA,QAAQ,CACW,CAAC,CAE3B,CAEA,GAAI,CAACV,cAAc,EAAI,CAACI,aAAa,CAAE,CACrC,KAAM,IAAI,CAAAyB,KAAK,CAAC,8DAA8D,CAAC,CACjF,CAEA;AASA,KAAM,CAAAH,WAAW,cAAGnC,aAAa,CAAyB,IAAI,CAAC,CAE/D,MAAO,SAAS,CAAAuC,YAAYA,CAAAC,KAAA,CAA8C,IAA7C,CAAErB,QAAwC,CAAC,CAAAqB,KAAA,CACtE;AACA,GAAI3B,aAAa,CAAE,CACjB,mBAAOL,IAAA,CAACS,eAAe,EAAAE,QAAA,CAAEA,QAAQ,CAAkB,CAAC,CACtD,CAEA;AACA,mBACEX,IAAA,CAACJ,aAAa,EAACK,cAAc,CAAEA,cAAgB,CAAAU,QAAA,cAC7CX,IAAA,CAACiC,WAAW,EAAAtB,QAAA,CAAEA,QAAQ,CAAc,CAAC,CACxB,CAAC,CAEpB,CAEA,QAAS,CAAAsB,WAAWA,CAAAC,KAAA,CAA8C,IAA7C,CAAEvB,QAAwC,CAAC,CAAAuB,KAAA,CAC9D,KAAM,CAAElB,QAAQ,CAAEJ,UAAU,CAAEK,MAAM,CAAEM,OAAQ,CAAC,CAAG1B,OAAO,CAAC,CAAC,CAC3D,KAAM,CAAEqB,IAAK,CAAC,CAAGpB,OAAO,CAAC,CAAC,CAC1B,KAAM,CAACqC,SAAS,CAAEC,YAAY,CAAC,CAAGzC,QAAQ,CAAC,KAAK,CAAC,CAEjD;AACAD,SAAS,CAAC,IAAM,CACd,cAAe,CAAA2C,SAASA,CAAA,CAAG,CACzB,GAAIrB,QAAQ,EAAIJ,UAAU,EAAIK,MAAM,EAAIC,IAAI,EAAI,CAACiB,SAAS,CAAE,CAC1D,GAAI,KAAAG,qBAAA,CACF,KAAM,CAAAC,KAAK,CAAC,iBAAiB,CAAE,CAC7BC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnB3B,MAAM,CACN4B,KAAK,EAAAP,qBAAA,CAAEpB,IAAI,CAACG,mBAAmB,UAAAiB,qBAAA,iBAAxBA,qBAAA,CAA0BhB,YAAY,CAC7CH,SAAS,CAAED,IAAI,CAACC,SAAS,CACzBC,QAAQ,CAAEF,IAAI,CAACE,QACjB,CAAC,CACH,CAAC,CAAC,CAEFgB,YAAY,CAAC,IAAI,CAAC,CAClBZ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACrC,CAAE,MAAOqB,KAAK,CAAE,CACdtB,OAAO,CAACsB,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CACF,CAEAT,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACrB,QAAQ,CAAEJ,UAAU,CAAEK,MAAM,CAAEC,IAAI,CAAEiB,SAAS,CAAC,CAAC,CAEnD,KAAM,CAAAY,SAA0B,CAAG,CACjC/B,QAAQ,CACRJ,UAAU,CAAEA,UAAU,EAAI,KAAK,CAC/BK,MAAM,CACNC,IAAI,CACJK,OACF,CAAC,CAED,mBACEvB,IAAA,CAAC2B,WAAW,CAACC,QAAQ,EAACC,KAAK,CAAEkB,SAAU,CAAApC,QAAA,CACpCA,QAAQ,CACW,CAAC,CAE3B,CAEA,MAAO,SAAS,CAAAqC,UAAUA,CAAA,CAAG,CAC3B,KAAM,CAAAC,OAAO,CAAGxD,UAAU,CAACkC,WAAW,CAAC,CACvC,GAAI,CAACsB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAnB,KAAK,CAAC,gDAAgD,CAAC,CACnE,CACA,MAAO,CAAAmB,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}