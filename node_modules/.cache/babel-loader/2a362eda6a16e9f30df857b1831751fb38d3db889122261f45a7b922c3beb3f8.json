{"ast":null,"code":"import{useState,useEffect}from'react';export function useLocalStorage(key,initialValue){const[storedValue,setStoredValue]=useState(()=>{try{const item=window.localStorage.getItem(key);return item?JSON.parse(item):initialValue;}catch(error){console.log(error);return initialValue;}});const setValue=value=>{try{const valueToStore=value instanceof Function?value(storedValue):value;setStoredValue(valueToStore);window.localStorage.setItem(key,JSON.stringify(valueToStore));}catch(error){console.log(error);}};useEffect(()=>{const handleStorageChange=()=>{try{const item=window.localStorage.getItem(key);if(item){setStoredValue(JSON.parse(item));}}catch(error){console.log(error);}};window.addEventListener('storage',handleStorageChange);return()=>window.removeEventListener('storage',handleStorageChange);},[key]);return[storedValue,setValue];}","map":{"version":3,"names":["useState","useEffect","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","log","setValue","value","valueToStore","Function","setItem","stringify","handleStorageChange","addEventListener","removeEventListener"],"sources":["/Users/devenspear/CascadeProjects/HealthApps25/src/hooks/useLocalStorage.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      try {\n        const item = window.localStorage.getItem(key);\n        if (item) {\n          setStoredValue(JSON.parse(item));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, [key]);\n\n  return [storedValue, setValue] as const;\n} "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,MAAO,SAAS,CAAAC,eAAeA,CAAIC,GAAW,CAAEC,YAAe,CAAE,CAC/D,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGN,QAAQ,CAAI,IAAM,CACtD,GAAI,CACF,KAAM,CAAAO,IAAI,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,CAC7C,MAAO,CAAAI,IAAI,CAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAAGH,YAAY,CAC/C,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClB,MAAO,CAAAT,YAAY,CACrB,CACF,CAAC,CAAC,CAEF,KAAM,CAAAY,QAAQ,CAAIC,KAA0B,EAAK,CAC/C,GAAI,CACF,KAAM,CAAAC,YAAY,CAAGD,KAAK,WAAY,CAAAE,QAAQ,CAAGF,KAAK,CAACZ,WAAW,CAAC,CAAGY,KAAK,CAC3EX,cAAc,CAACY,YAAY,CAAC,CAC5BV,MAAM,CAACC,YAAY,CAACW,OAAO,CAACjB,GAAG,CAAEQ,IAAI,CAACU,SAAS,CAACH,YAAY,CAAC,CAAC,CAChE,CAAE,MAAOL,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CACF,CAAC,CAEDZ,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,mBAAmB,CAAGA,CAAA,GAAM,CAChC,GAAI,CACF,KAAM,CAAAf,IAAI,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,CAC7C,GAAII,IAAI,CAAE,CACRD,cAAc,CAACK,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAAC,CAClC,CACF,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CACF,CAAC,CAEDL,MAAM,CAACe,gBAAgB,CAAC,SAAS,CAAED,mBAAmB,CAAC,CACvD,MAAO,IAAMd,MAAM,CAACgB,mBAAmB,CAAC,SAAS,CAAEF,mBAAmB,CAAC,CACzE,CAAC,CAAE,CAACnB,GAAG,CAAC,CAAC,CAET,MAAO,CAACE,WAAW,CAAEW,QAAQ,CAAC,CAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}