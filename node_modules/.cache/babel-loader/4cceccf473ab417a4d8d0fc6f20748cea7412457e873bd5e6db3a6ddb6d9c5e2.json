{"ast":null,"code":"import _objectSpread from \"/Users/devenspear/CascadeProjects/HealthApps25/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// src/object.ts\nvar without = function (obj) {\n  const copy = _objectSpread({}, obj);\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  for (const prop of props) {\n    delete copy[prop];\n  }\n  return copy;\n};\nvar removeUndefined = obj => {\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [key, value] = _ref;\n    if (value !== void 0 && value !== null) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n};\nvar applyFunctionToObj = (obj, fn) => {\n  const result = {};\n  for (const key in obj) {\n    result[key] = fn(obj[key], key);\n  }\n  return result;\n};\nvar filterProps = (obj, filter) => {\n  const result = {};\n  for (const key in obj) {\n    if (obj[key] && filter(obj[key])) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n};\nexport { without, removeUndefined, applyFunctionToObj, filterProps };","map":{"version":3,"names":["without","obj","copy","_objectSpread","_len","arguments","length","props","Array","_key","prop","removeUndefined","Object","entries","reduce","acc","_ref","key","value","applyFunctionToObj","fn","result","filterProps","filter"],"sources":["/Users/devenspear/CascadeProjects/HealthApps25/node_modules/@clerk/shared/src/object.ts"],"sourcesContent":["export const without = <T extends object, P extends keyof T>(obj: T, ...props: P[]): Omit<T, P> => {\n  const copy = { ...obj };\n  for (const prop of props) {\n    delete copy[prop];\n  }\n  return copy;\n};\n\nexport const removeUndefined = <T extends object>(obj: T): Partial<T> => {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== undefined && value !== null) {\n      acc[key as keyof T] = value;\n    }\n    return acc;\n  }, {} as Partial<T>);\n};\n\nexport const applyFunctionToObj = <T extends Record<string, any>, R>(\n  obj: T,\n  fn: (val: any, key: string) => R,\n): Record<string, R> => {\n  const result = {} as Record<string, R>;\n  for (const key in obj) {\n    result[key] = fn(obj[key], key);\n  }\n  return result;\n};\n\nexport const filterProps = <T extends Record<string, any>>(obj: T, filter: (a: any) => boolean): T => {\n  const result = {} as T;\n  for (const key in obj) {\n    if (obj[key] && filter(obj[key])) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n};\n"],"mappings":";;AAAO,IAAMA,OAAA,GAAU,SAAAA,CAAsCC,GAAA,EAAsC;EACjG,MAAMC,IAAA,GAAAC,aAAA,KAAYF,GAAA,CAAI;EAAA,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADgDC,KAAA,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAAF,KAAA,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAEtE,WAAWC,IAAA,IAAQH,KAAA,EAAO;IACxB,OAAOL,IAAA,CAAKQ,IAAI;EAClB;EACA,OAAOR,IAAA;AACT;AAEO,IAAMS,eAAA,GAAqCV,GAAA,IAAuB;EACvE,OAAOW,MAAA,CAAOC,OAAA,CAAQZ,GAAG,EAAEa,MAAA,CAAO,CAACC,GAAA,EAAAC,IAAA,KAAsB;IAAA,IAAjB,CAACC,GAAA,EAAKC,KAAK,IAAAF,IAAA;IACjD,IAAIE,KAAA,KAAU,UAAaA,KAAA,KAAU,MAAM;MACzCH,GAAA,CAAIE,GAAc,IAAIC,KAAA;IACxB;IACA,OAAOH,GAAA;EACT,GAAG,CAAC,CAAe;AACrB;AAEO,IAAMI,kBAAA,GAAqBA,CAChClB,GAAA,EACAmB,EAAA,KACsB;EACtB,MAAMC,MAAA,GAAS,CAAC;EAChB,WAAWJ,GAAA,IAAOhB,GAAA,EAAK;IACrBoB,MAAA,CAAOJ,GAAG,IAAIG,EAAA,CAAGnB,GAAA,CAAIgB,GAAG,GAAGA,GAAG;EAChC;EACA,OAAOI,MAAA;AACT;AAEO,IAAMC,WAAA,GAAcA,CAAgCrB,GAAA,EAAQsB,MAAA,KAAmC;EACpG,MAAMF,MAAA,GAAS,CAAC;EAChB,WAAWJ,GAAA,IAAOhB,GAAA,EAAK;IACrB,IAAIA,GAAA,CAAIgB,GAAG,KAAKM,MAAA,CAAOtB,GAAA,CAAIgB,GAAG,CAAC,GAAG;MAChCI,MAAA,CAAOJ,GAAG,IAAIhB,GAAA,CAAIgB,GAAG;IACvB;EACF;EACA,OAAOI,MAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}